function out = read_TRILE_PLATO(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [FIELDNAME,L,B,GC,LOGAGE,M_H,M_INI,MU0,AV,MRATIO,MASS,LOGL,LOGTE,LOGG,LABEL,U,B,V,R,I,J,H,KS,HP_HIPP,BT_TYCHO,VT_TYCHO,W_PLATO]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [FIELDNAME,L,B,GC,LOGAGE,M_H,M_INI,MU0,AV,MRATIO,MASS,LOGL,LOGTE,LOGG,LABEL,U,B,V,R,I,J,H,KS,HP_HIPP,BT_TYCHO,VT_TYCHO,W_PLATO]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [fieldname,l,b,Gc,logAge,M_H,m_ini,mu0,Av,mratio,Mass,logL,logTe,logg,label,U,B,V,R,I,J,H,Ks,Hp_Hipp,BT_Tycho,VT_Tycho,W_Plato] = importfile('plato_bigsim.dat',2, 161192);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/12/15 15:10:57

%% Initialize variables.
delimiter = ' ';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
out.fieldname = dataArray{:, 1};
out.l = dataArray{:, 2};
out.b = dataArray{:, 3};
out.Gc = dataArray{:, 4};
out.logAge = dataArray{:, 5};
out.M_H = dataArray{:, 6};
out.m_ini = dataArray{:, 7};
out.mu0 = dataArray{:, 8};
out.Av = dataArray{:, 9};
out.mratio = dataArray{:, 10};
out.Mass = dataArray{:, 11};
out.logL = dataArray{:, 12};
out.logTe = dataArray{:, 13};
out.logg = dataArray{:, 14};
out.label = dataArray{:, 15};
out.U = dataArray{:, 16};
out.B = dataArray{:, 17};
out.V = dataArray{:, 18};
out.R = dataArray{:, 19};
out.I = dataArray{:, 20};
out.J = dataArray{:, 21};
out.H = dataArray{:, 22};
out.Ks = dataArray{:, 23};
out.Hp_Hipp = dataArray{:, 24};
out.BT_Tycho = dataArray{:, 25};
out.VT_Tycho = dataArray{:, 26};
out.W_Plato = dataArray{:, 27};


